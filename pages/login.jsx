import React, { Fragment, useContext, useEffect, useState } from 'react';
import { SupportIcon } from "@heroicons/react/solid"
import AuthContext from '../context/AuthContext';
import Cookies from 'js-cookie';
import Head from 'next/head';
import { useRouter } from "next/router";
import request from '../lib/request';
import UseAuth from '../lib/useAuth';
import Logo from '../components/Logo';
import { motion } from "framer-motion";

const Login = ({setNotification}) => {
    const router = useRouter();
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [remember, setRemember] = useState(false)
    const [errors, setErrors] = useState({});
    const [loading, setLoading] = useState(false);
    const {login, isLoading, user} = UseAuth()

    const handleSubmit = (e) => {
        e.preventDefault();
        setLoading(true);
        login({email, password, remember, setErrors,setLoading});
    }

    return (
        <Fragment>
            <Head>
                <title>Login | Plagiarism</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
            <motion.div
                variants={{
                    start:{
                        opacity:0,
                    },
                    finished: {
                        opacity:1,
                        transition: {
                            duration: 0.3,
                            ease: 'easeInOut'
                        }
                    },
                    exit: {
                        opacity: 0,
                        transition: {
                            duration: 3,
                            ease: 'easeInOut',
                            type: "spring",
                            stiffness: 2600,
                            damping: 260
                        },
                    }
                }}
                initial="start"
                animate="finished"
                exit="exit"
                className="bg-white relative w-full h-auto md:min-h-screen min-h-max overflow-hidden flex  justify-center items-center bg-no-repeat bg-left-top bg-cover "
            >
                <div className="p-4 w-full max-w-sm bg-white rounded-lg  sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700">
                    <Logo className="relative w-auto flex items-center justify-center" />
                    <form className="p-2" onSubmit={(e) => {handleSubmit(e)}}>
                        <h5 className="text-sm font-medium text-gray-900 dark:text-white my-3 text-center">Welcome back! Please enter your details.</h5>
                        <div className="p-0">
                            <label htmlFor="email" className="block my-1 text-sm font-medium text-gray-900 dark:text-gray-300">Email</label>
                            <input
                                type="text"
                                value={email}
                                onChange={e => setEmail(e.target.value)}
                                name="email" id="email"
                                className={`${errors.email ? "border-red-500" : "border-green-300" } bg-gray-50 border focus-visible:outline-none focus-visible:border-primary-400 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white`}
                                // placeholder="name@company.com"
                                placeholder="Enter your email"
                                required="" />
                                <p className={`${errors.email ? "opacity-100" : "opacity-0" } text-xs font-medium py-1 px-1 text-red-500`}>
                                    {errors.email ? errors.email : "MD Ibrahim Kholil"}
                                </p>
                        </div>
                        <div className="p-0">
                            <label htmlFor="password" className="block my-1 text-sm font-medium text-gray-900 dark:text-gray-300">Password</label>
                            <input
                                type="password"
                                value={password}
                                onChange={e => setPassword(e.target.value)}
                                name="password" id="password"
                                className={`${errors.password ? "border-red-500" : "border-green-300" } bg-gray-50 border focus-visible:outline-none focus-visible:border-primary-400 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white`}
                                placeholder="Password"
                                required=""
                            />
                            <p className={`${errors.password ? "opacity-100" : "opacity-0" } text-xs font-medium py-1 px-1 text-red-500`} >
                                {errors.password ? errors.password : "MD Ibrahim Kholil"}
                            </p>
                        </div>
                        <div className="flex items-start my-2">
                            <div className="flex items-start">
                                <div className="flex items-center h-5">
                                    <input
                                    id="remember"
                                    type="checkbox"
                                    checked={remember}
                                    onChange={e => setRemember(!remember)}
                                    className="focus-visible:outline-none w-4 h-4 bg-gray-50 rounded border border-gray-300 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
                                    required="" />
                                </div>
                                <label htmlFor="remember" className="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">
                                    Remember me
                                </label>
                            </div>
                            <a href="#" className="focus-visible:outline-none ml-auto text-sm text-primary-700 hover:underline dark:text-primary-500">
                                Lost Password?
                            </a>
                        </div>
                        <button type="submit" className="my-4 focus-visible:outline-none w-full flex justify-center items-center text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300        font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">
                            {loading ?
                                <>
                                    <svg className="animate-spin mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                                        <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                    Loading ...
                                </>
                            :
                                <>Login to your account</>
                            }
                        </button>
                        <div className="text-sm flex justify-between items-center font-medium text-gray-500 dark:text-gray-300">
                            <span>
                            Don't have an account?
                            </span>
                            <a href="#" className="focus-visible:outline-none text-primary-700 hover:underline dark:text-primary-500">
                                Create account
                            </a>
                        </div>
                    </form>
                </div>
            </motion.div>
        </Fragment>

    );
}

export default Login;
