import React, { Fragment, useContext, useEffect, useState } from 'react';
import { SupportIcon } from "@heroicons/react/solid"
import AuthContext from '../context/AuthContext';
import Cookies from 'js-cookie';
import Head from 'next/head';
import { useRouter } from "next/router";
import request from '../lib/request';
import UseAuth from '../lib/useAuth';
import Logo from '../components/Logo';
import { motion } from "framer-motion";
import Link from 'next/link';

const Login = ({setNotification}) => {
    const router = useRouter();
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [remember, setRemember] = useState(false)
    const [errors, setErrors] = useState({});
    const [loading, setLoading] = useState(false);
    const {login, isLoading, user} = UseAuth()
    // const [oauth, setOauth] = useState("#");

    // useEffect(() => {
    //     request.post("oauth/google").then(res => {
    //         const response = res.data
    //         if(response.success){
    //             setOauth(response.oauth)
    //         }
    //         console.log('====================================');
    //         console.log(res.data);
    //         console.log('====================================');
    //     })
    // }, []);

    const setOauth = () => {
        request.post("oauth/google").then(res => {
            const response = res.data
            if(response.success){
                // setOauth(response.oauth)
                window.location = response.oauth
            }
        })
    }

    const handleSubmit = (e) => {
        e.preventDefault();
        setLoading(true);
        login({email, password, remember, setErrors,setLoading});
    }

    return (
        <Fragment>
            <Head>
                <title>Login | Plagiarism</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
            <motion.div
                variants={{
                    start:{
                        opacity:0,
                    },
                    finished: {
                        opacity:1,
                        transition: {
                            duration: 0.3,
                            ease: 'easeInOut'
                        }
                    },
                    exit: {
                        opacity: 0,
                        transition: {
                            duration: 3,
                            ease: 'easeInOut',
                            type: "spring",
                            stiffness: 2600,
                            damping: 260
                        },
                    }
                }}
                initial="start"
                animate="finished"
                exit="exit"
                className="bg-white relative w-full h-auto md:min-h-screen min-h-max overflow-hidden flex  justify-center items-center bg-no-repeat bg-left-top bg-cover "
            >
                <div className="p-4 w-full max-w-sm bg-white rounded-lg  sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700">
                    <Logo className="relative w-auto flex items-center justify-center" />
                    <form className="p-2" onSubmit={(e) => {handleSubmit(e)}}>
                        <h5 className="text-sm font-medium text-gray-900 dark:text-white my-3 text-center">Welcome back! Please enter your details.</h5>
                        <div className="relative">
                            <span onClick={setOauth} className="w-full cursor-pointer flex items-center justify-center mt-4 text-gray-600 transition-colors duration-200 transform border rounded-md dark:border-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-600">
                                <div className="px-4 py-2 pointer-events-none">
                                    <svg className="w-5 h-5" viewBox="0 0 40 40">
                                        <path
                                            d="M36.3425 16.7358H35V16.6667H20V23.3333H29.4192C28.045 27.2142 24.3525 30 20 30C14.4775 30 10 25.5225 10 20C10 14.4775 14.4775 9.99999 20 9.99999C22.5492 9.99999 24.8683 10.9617 26.6342 12.5325L31.3483 7.81833C28.3717 5.04416 24.39 3.33333 20 3.33333C10.7958 3.33333 3.33335 10.7958 3.33335 20C3.33335 29.2042 10.7958 36.6667 20 36.6667C29.2042 36.6667 36.6667 29.2042 36.6667 20C36.6667 18.8825 36.5517 17.7917 36.3425 16.7358Z"
                                            fill="#FFC107" />
                                        <path
                                            d="M5.25497 12.2425L10.7308 16.2583C12.2125 12.59 15.8008 9.99999 20 9.99999C22.5491 9.99999 24.8683 10.9617 26.6341 12.5325L31.3483 7.81833C28.3716 5.04416 24.39 3.33333 20 3.33333C13.5983 3.33333 8.04663 6.94749 5.25497 12.2425Z"
                                            fill="#FF3D00" />
                                        <path
                                            d="M20 36.6667C24.305 36.6667 28.2167 35.0192 31.1742 32.34L26.0159 27.975C24.3425 29.2425 22.2625 30 20 30C15.665 30 11.9842 27.2359 10.5975 23.3784L5.16254 27.5659C7.92087 32.9634 13.5225 36.6667 20 36.6667Z"
                                            fill="#4CAF50" />
                                        <path
                                            d="M36.3425 16.7358H35V16.6667H20V23.3333H29.4192C28.7592 25.1975 27.56 26.805 26.0133 27.9758C26.0142 27.975 26.015 27.975 26.0158 27.9742L31.1742 32.3392C30.8092 32.6708 36.6667 28.3333 36.6667 20C36.6667 18.8825 36.5517 17.7917 36.3425 16.7358Z"
                                            fill="#1976D2" />
                                    </svg>
                                </div>
                                <span className="w-5/6 px-4 py-3 text-sm font-bold text-center">Sign in with Google</span>
                            </span>
                        </div>
                        <div className="relative flex justify-between items-center py-5 ">
                            <span className='h-0.5 bg-gray-500/10 flex-auto'></span>
                            <span className='px-2 text-xs font-semibold'>or</span>
                            <span className='h-0.5 bg-gray-500/10 flex-auto'></span>
                        </div>
                        <div className="p-0">
                            <label htmlFor="email" className="block my-1 text-sm font-medium text-gray-900 dark:text-gray-300">Email</label>
                            <input
                                type="text"
                                value={email}
                                onChange={e => setEmail(e.target.value)}
                                name="email" id="email"
                                className={`${errors.email ? "border-red-500" : "border-green-300" } bg-gray-50 border focus-visible:outline-none focus-visible:border-primary-400 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white`}
                                // placeholder="name@company.com"
                                placeholder="Enter your email"
                                required="" />
                                <p className={`${errors.email ? "opacity-100" : "opacity-0" } text-xs font-medium py-1 px-1 text-red-500`}>
                                    {errors.email ? errors.email : "MD Ibrahim Kholil"}
                                </p>
                        </div>
                        <div className="p-0">
                            <label htmlFor="password" className="block my-1 text-sm font-medium text-gray-900 dark:text-gray-300">Password</label>
                            <input
                                type="password"
                                value={password}
                                onChange={e => setPassword(e.target.value)}
                                name="password" id="password"
                                className={`${errors.password ? "border-red-500" : "border-green-300" } bg-gray-50 border focus-visible:outline-none focus-visible:border-primary-400 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white`}
                                placeholder="Password"
                                required=""
                            />
                            <p className={`${errors.password ? "opacity-100" : "opacity-0" } text-xs font-medium py-1 px-1 text-red-500`} >
                                {errors.password ? errors.password : "MD Ibrahim Kholil"}
                            </p>
                        </div>
                        <div className="flex items-start my-2">
                            <div className="flex items-start">
                                <div className="flex items-center h-5">
                                    <input
                                    id="remember"
                                    type="checkbox"
                                    checked={remember}
                                    onChange={e => setRemember(!remember)}
                                    className="focus-visible:outline-none w-4 h-4 bg-gray-50 rounded border border-gray-300 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
                                    required="" />
                                </div>
                                <label htmlFor="remember" className="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">
                                    Remember me
                                </label>
                            </div>
                            <a href="#" className="focus-visible:outline-none ml-auto text-sm text-primary-700 hover:underline dark:text-primary-500">
                                Lost Password?
                            </a>
                        </div>
                        <button type="submit" className="my-4 focus-visible:outline-none w-full flex justify-center items-center text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">
                            {loading ?
                                <>
                                    <svg className="animate-spin mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                                        <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                    Loading ...
                                </>
                            :
                                <>Login to your account</>
                            }
                        </button>
                        <div className="text-sm flex justify-between items-center font-medium text-gray-500 dark:text-gray-300">
                            <span>
                            Don't have an account?
                            </span>
                            <a href="#" className="focus-visible:outline-none text-primary-700 hover:underline dark:text-primary-500">
                                Create account
                            </a>
                        </div>
                    </form>
                </div>
            </motion.div>
        </Fragment>

    );
}

export default Login;
