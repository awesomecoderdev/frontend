import React, { Fragment, useContext, useEffect, useState } from 'react';
import { SupportIcon } from "@heroicons/react/solid"
import AuthContext from '../context/AuthContext';
import Cookies from 'js-cookie';
import Head from 'next/head';
import { useRouter } from "next/router";
import request from '../lib/request';
import UseAuth from '../lib/useAuth';
import Logo from '../components/Logo';
import { motion } from "framer-motion";
import Link from 'next/link';

const Login = ({setNotification}) => {
    const router = useRouter();
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [remember, setRemember] = useState(false)
    const [errors, setErrors] = useState({});
    const [loading, setLoading] = useState(false);
    const {login, isLoading, user} = UseAuth()
    // const [oauth, setOauth] = useState("#");

    // useEffect(() => {
    //     request.post("oauth/google").then(res => {
    //         const response = res.data
    //         if(response.success){
    //             setOauth(response.oauth)
    //         }
    //         console.log('====================================');
    //         console.log(res.data);
    //         console.log('====================================');
    //     })
    // }, []);

    const setOauth = () => {
        request.post("oauth/google").then(res => {
            const response = res.data
            if(response.success){
                // setOauth(response.oauth)
                window.location = response.oauth
            }
        })
    }

    const handleSubmit = (e) => {
        e.preventDefault();
        setLoading(true);
        login({email, password, remember, setErrors,setLoading});
    }

    return (
        <Fragment>
            <Head>
                <title>Login | Plagiarism</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
            <motion.div
                variants={{
                    start:{
                        opacity:0,
                    },
                    finished: {
                        opacity:1,
                        transition: {
                            duration: 0.3,
                            ease: 'easeInOut'
                        }
                    },
                    exit: {
                        opacity: 0,
                        transition: {
                            duration: 3,
                            ease: 'easeInOut',
                            type: "spring",
                            stiffness: 2600,
                            damping: 260
                        },
                    }
                }}
                initial="start"
                animate="finished"
                exit="exit"
                className="bg-white relative w-full h-auto md:min-h-screen min-h-max overflow-hidden flex  justify-center items-center bg-no-repeat bg-left-top bg-cover "
            >
                <div className="p-4 w-screen max-w-md bg-white rounded-lg  sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700">
                    <Logo className="relative w-auto flex items-center justify-center" />
                </div>
            </motion.div>
        </Fragment>

    );
}

export default Login;
